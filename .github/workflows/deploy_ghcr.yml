---
name: Deploy

on:
  # Enable manual running of action if necessary
  workflow_dispatch:
    inputs:
      reason:
        required: true
        description: "Reason for running this workflow"
      disable_upstream_triggers:
        required: false
        type: boolean
        description: "Rebuild the base images but don't trigger downstream builds"
        default: false
  # Build and deploy the image on pushes to main branch
  push:
    # Only publish on push to main branch
    branches:
      - main
    # Don't trigger if it's just a documentation update
    paths:
      - "Dockerfile**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  hadolint:
    name: Run hadolint against docker files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Pull hadolint/hadolint:latest Image
        run: docker pull hadolint/hadolint:latest
      - name: Run hadolint against Dockerfiles
        run: docker run --rm -i -v "$PWD":/workdir --workdir /workdir --entrypoint hadolint hadolint/hadolint --ignore DL3003 --ignore DL3006 --ignore DL3010 --ignore DL4001 --ignore DL3007 --ignore DL3008 --ignore SC2068 --ignore DL3007 --ignore SC1091 --ignore DL3013 --ignore DL3010 $(find . -type f -iname "Dockerfile*")

  deploy_ghcr_rtlsdr:
    name: Deploy rtlsdr to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Check out our code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      # Build & Push Dockerfile.rtlsdr (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/tjmullicani/docker-tar1090:rtlsdr
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.rtlsdr
          no-cache: true
          platforms: linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/tjmullicani/docker-tar1090:rtlsdr
          labels: ${{ steps.meta.outputs.labels }}

  deploy_ghcr_bladerf:
    name: Deploy bladerf to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Check out our code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      # Build & Push Dockerfile.rtlsdr (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/tjmullicani/docker-tar1090:bladerf
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.bladerf
          no-cache: true
          platforms: linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/tjmullicani/docker-tar1090:bladerf
          labels: ${{ steps.meta.outputs.labels }}